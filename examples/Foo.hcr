%module main:Foo
  %data main:Foo.Foo aapB =
    {main:Foo.Foo aapB ghczmprim:GHCziTypes.Int aapB;
     main:Foo.Bar ghczmprim:GHCziTypes.Float};
  %newtype main:Foo.Bazz main:Foo.NTCoZCBazz
    = main:Foo.Foo
      (ghczmprim:GHCziTypes.ZMZN ghczmprim:GHCziTypes.Char);
  main:Foo.foo2bool :: %forall taId . (main:Foo.Foo taId) ->
                                      ghczmprim:GHCziTypes.Bool =
    \ @ taIf (dsdIo::main:Foo.Foo taIf) ->
        %case ghczmprim:GHCziTypes.Bool dsdIo
        %of (wildX4::main:Foo.Foo taIf)
          {main:Foo.Foo
           (ds1dIp::taIf) (ds2dIq::ghczmprim:GHCziTypes.Int) (ds3dIr::taIf) ->
             ghczmprim:GHCziTypes.True;
           main:Foo.Bar (ds1dIs::ghczmprim:GHCziTypes.Float) ->
             ghczmprim:GHCziTypes.False};
